- name: install wireguard
  apt:
    name:
      - wireguard-dkms
      - wireguard-tools
    state: present



- name: generate servers private and public key  # noqa 503
  shell: |
      set -o pipefail
      wg genkey | tee {{ wireguard_interface }}.key | wg pubkey > {{ wireguard_interface }}.pub
      chmod -v 400 /etc/wireguard/*key
  args:
    executable: /bin/bash
    chdir: /etc/wireguard
    creates: "/etc/wireguard/{{ wireguard_interface }}.pub"
  notify: restart wireguard

- name: cat the servers public key for setting it as fact  # noqa 301 305
  shell: "cat /etc/wireguard/{{ wireguard_interface }}.pub"
  register: wireguard_server_public_key_out

- name: set fact for the servers public key
  set_fact:
    wireguard_server_public_key: "{{ wireguard_server_public_key_out.stdout_lines[0] }}"

- name: "template /etc/wireguard/{{ wireguard_interface }}.conf"
  template:
    src: templates/etc/wireguard/server.conf.j2
    dest: "/etc/wireguard/{{ wireguard_interface }}.conf"
    owner: root
    group: root
    mode: 0600
  notify: restart wireguard

- name: set wireguard related sysctl ip settings
  sysctl:
    name: "{{ wireguard_server_systctl_item }}"
    value: '1'
    sysctl_set: True
    state: present
    reload: True
  loop_control:
    loop_var: wireguard_server_systctl_item
  with_items:
    - "net.ipv4.ip_forward"
    - "net.ipv6.conf.all.forwarding"



- name: create client configs directory
  file:
    state: directory
    path: "/etc/wireguard/{{ wireguard_interface }}-clients"
    owner: root
    group: root
    mode: 0700

- name: template client configs
  template:
    src: templates/etc/wireguard/client.conf.j2
    dest: "/etc/wireguard/{{ wireguard_interface }}-clients/{{ wireguard_peer['name'] }}.conf"
    owner: root
    group: root
    mode: 0600
  with_items: "{{ wireguard_peers }}"
  loop_control:
    loop_var: wireguard_peer
